I"i^<h3 id="下载微信sdk">下载微信SDK</h3>

<p>微信开放平台 <a href="https://open.weixin.qq.com">https://open.weixin.qq.com</a></p>

<p><img src="http://upload-images.jianshu.io/upload_images/1269906-03c3fafce683fa65.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信开放平台" /></p>

<h3 id="导入sdk">导入SDK</h3>

<p>导入SDK，并添加依赖库</p>

<p><img src="http://upload-images.jianshu.io/upload_images/1269906-4e5a0e9baf265421.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="" /></p>

<h3 id="配置url-scheme">配置URL scheme</h3>

<p>在Xcode中，选择你的工程设置项，选中<code class="highlighter-rouge">TARGETS</code>一栏，在<code class="highlighter-rouge">info</code>标签栏的<code class="highlighter-rouge">URL type</code>添加<code class="highlighter-rouge">URL scheme</code>为你所注册的应用程序id（如下图所示），此步为配置应用间的跳转。</p>

<p><img src="http://upload-images.jianshu.io/upload_images/1269906-c20b3c9b67a92432.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="配置Url Scheme" /></p>

<h2 id="开始编写代码">开始编写代码</h2>

<ul>
  <li>在<code class="highlighter-rouge">Appdelegate.h</code>中引用微信文件，声明遵循代理。</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="cp">#import &lt;UIKit/UIKit.h&gt;  </span>
<span class="cp">#import "WXApi.h"  </span>
  
<span class="kd">@interface</span> <span class="kt">AppDelegate</span> <span class="p">:</span> <span class="kt">UIResponder</span> <span class="o">&lt;</span><span class="kt">UIApplicationDelegate</span><span class="p">,</span><span class="kt">WXApiDelegate</span><span class="o">&gt;</span>  
  
<span class="kd">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="kt">UIWindow</span> <span class="o">*</span><span class="n">window</span><span class="p">;</span>  
  
<span class="kd">@end</span>


</code></pre></div></div>

<ul>
  <li><code class="highlighter-rouge">注册SDK</code>要使你的程序启动后微信终端能响应你的程序，必须在代码中向微信终端注册你的id。（在 <code class="highlighter-rouge">AppDelegate</code> 的 <code class="highlighter-rouge">didFinishLaunchingWithOptions</code> 函数中向微信注册<code class="highlighter-rouge">id</code>）。</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="o">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nv">application</span><span class="p">:(</span><span class="kt">UIApplication</span> <span class="o">*</span><span class="p">)</span><span class="n">application</span> <span class="nv">didFinishLaunchingWithOptions</span><span class="p">:(</span><span class="kt">NSDictionary</span> <span class="o">*</span><span class="p">)</span><span class="n">launchOptions</span> <span class="p">{</span>  
    <span class="c1">// Override point for customization after application launch.  </span>
      
    <span class="p">[</span><span class="kt">WXApi</span> <span class="nv">registerApp</span><span class="p">:</span><span class="s">@"这里填写你的AppID"</span><span class="p">];</span>  
      
    <span class="k">return</span> <span class="kt">YES</span><span class="p">;</span>  
<span class="p">}</span>  


</code></pre></div></div>

<ul>
  <li>重写<code class="highlighter-rouge">AppDelegate</code>的<code class="highlighter-rouge">handleOpenURL</code>和<code class="highlighter-rouge">openURL</code>方法</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1">//和QQ,新浪并列回调句柄  </span>
<span class="o">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nv">application</span><span class="p">:(</span><span class="kt">UIApplication</span> <span class="o">*</span><span class="p">)</span><span class="n">application</span> <span class="nv">openURL</span><span class="p">:(</span><span class="kt">NSURL</span> <span class="o">*</span><span class="p">)</span><span class="n">url</span> <span class="nv">sourceApplication</span><span class="p">:(</span><span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">sourceApplication</span> <span class="nv">annotation</span><span class="p">:(</span><span class="n">id</span><span class="p">)</span><span class="n">annotation</span>  
<span class="p">{</span>  
    <span class="k">return</span> <span class="p">[</span><span class="kt">WXApi</span> <span class="nv">handleOpenURL</span><span class="p">:</span><span class="n">url</span> <span class="nv">delegate</span><span class="p">:</span><span class="k">self</span><span class="p">];</span>  
<span class="p">}</span>  
  
<span class="o">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nv">application</span><span class="p">:(</span><span class="kt">UIApplication</span> <span class="o">*</span><span class="p">)</span><span class="n">application</span> <span class="nv">handleOpenURL</span><span class="p">:(</span><span class="kt">NSURL</span> <span class="o">*</span><span class="p">)</span><span class="n">url</span>  
<span class="p">{</span>  
    <span class="k">return</span> <span class="p">[</span><span class="kt">WXApi</span> <span class="nv">handleOpenURL</span><span class="p">:</span><span class="n">url</span> <span class="nv">delegate</span><span class="p">:</span><span class="k">self</span><span class="p">];</span>  
<span class="p">}</span>  


</code></pre></div></div>

<ul>
  <li>调用微信API，调用微信登录</li>
</ul>

<blockquote>
  <p><code class="highlighter-rouge">scope</code> : 应用授权作用域，如获取用户个人信息则填写<code class="highlighter-rouge">snsapi_userinfo</code></p>

  <p><code class="highlighter-rouge">state</code> : 用于保持请求和回调的状态，授权请求后原样带回给第三方。该参数可用于防止csrf攻击（跨站请求伪造攻击），建议第三方带上该参数，可设置为简单的随机数加session进行校验（非必填）。</p>
</blockquote>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="n">wechatLoginButtonPressed</span>  
<span class="p">{</span>  
    <span class="kt">NSLog</span><span class="p">(</span><span class="s">@"%s"</span><span class="p">,</span><span class="n">__func__</span><span class="p">);</span>  
      
    <span class="c1">//构造SendAuthReq结构体  </span>
    <span class="kt">SendAuthReq</span><span class="o">*</span> <span class="n">req</span> <span class="o">=</span><span class="p">[[</span><span class="kt">SendAuthReq</span> <span class="n">alloc</span><span class="p">]</span> <span class="kd">init</span><span class="p">];</span>  
    <span class="n">req</span><span class="o">.</span><span class="n">scope</span> <span class="o">=</span> <span class="s">@"snsapi_userinfo"</span> <span class="p">;</span>  
    <span class="n">req</span><span class="o">.</span><span class="n">state</span> <span class="o">=</span> <span class="s">@"123"</span> <span class="p">;</span>  
    <span class="c1">//第三方向微信终端发送一个SendAuthReq消息结构  </span>
    <span class="p">[</span><span class="kt">WXApi</span> <span class="nv">sendReq</span><span class="p">:</span><span class="n">req</span><span class="p">];</span>  
<span class="p">}</span>  

</code></pre></div></div>

<ul>
  <li>在<code class="highlighter-rouge">Appdelegate</code>中实现微信的代理，获取微信返回的<code class="highlighter-rouge">code</code>，这里我使用了通知的方法来调用登录<code class="highlighter-rouge">controller</code>中的相应才做，也可以使用代理、<code class="highlighter-rouge">KVO</code>等方式来实现。</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1">//授权后回调 WXApiDelegate  </span>
<span class="o">-</span><span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">onResp</span><span class="p">:(</span><span class="kt">BaseReq</span> <span class="o">*</span><span class="p">)</span><span class="n">resp</span>  
<span class="p">{</span>  
    <span class="cm">/* 
     ErrCode ERR_OK = 0(用户同意) 
     ERR_AUTH_DENIED = -4（用户拒绝授权） 
     ERR_USER_CANCEL = -2（用户取消） 
     code    用户换取access_token的code，仅在ErrCode为0时有效 
     state   第三方程序发送时用来标识其请求的唯一性的标志，由第三方程序调用sendReq时传入，由微信终端回传，state字符串长度不能超过1K 
     lang    微信客户端当前语言 
     country 微信用户当前国家信息 
     */</span>  
  
    <span class="k">if</span> <span class="p">([</span><span class="n">resp</span> <span class="nv">isKindOfClass</span><span class="p">:[</span><span class="kt">SendAuthResp</span> <span class="kd">class</span><span class="p">]])</span> <span class="c1">//判断是否为授权请求，否则与微信支付等功能发生冲突  </span>
    <span class="p">{</span>  
        <span class="kt">SendAuthResp</span> <span class="o">*</span><span class="n">aresp</span> <span class="o">=</span> <span class="p">(</span><span class="kt">SendAuthResp</span> <span class="o">*</span><span class="p">)</span><span class="n">resp</span><span class="p">;</span>  
        <span class="k">if</span> <span class="p">(</span><span class="n">aresp</span><span class="o">.</span><span class="n">errCode</span><span class="o">==</span> <span class="mi">0</span><span class="p">)</span>  
        <span class="p">{</span>  
            <span class="kt">NSLog</span><span class="p">(</span><span class="s">@"code %@"</span><span class="p">,</span><span class="n">aresp</span><span class="o">.</span><span class="n">code</span><span class="p">);</span>  
            <span class="p">[[</span><span class="kt">NSNotificationCenter</span> <span class="n">defaultCenter</span><span class="p">]</span> <span class="nv">postNotificationName</span><span class="p">:</span><span class="s">@"wechatDidLoginNotification"</span> <span class="nv">object</span><span class="p">:</span><span class="k">self</span> <span class="nv">userInfo</span><span class="p">:</span><span class="err">@</span><span class="p">{</span><span class="s">@"code"</span><span class="p">:</span><span class="n">aresp</span><span class="o">.</span><span class="n">code</span><span class="p">}];</span>  
        <span class="p">}</span>  
    <span class="p">}</span>  
<span class="p">}</span>  


</code></pre></div></div>

<p>相对应注册通知方法：</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
 <span class="c1">//跳转到主界面</span>
    <span class="p">[[</span><span class="kt">NSNotificationCenter</span> <span class="n">defaultCenter</span><span class="p">]</span> <span class="nv">addObserver</span><span class="p">:</span><span class="k">self</span> <span class="nv">selector</span><span class="p">:</span><span class="kd">@selector</span><span class="p">(</span><span class="nv">wechatDidLoginNotification</span><span class="p">:)</span> <span class="nv">name</span><span class="p">:</span><span class="s">@"wechatDidLoginNotification"</span> <span class="nv">object</span><span class="p">:</span><span class="kc">nil</span><span class="p">];</span>


</code></pre></div></div>

<p>记得在dealloc方法中移除通知，避免发生冲突：</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="n">dealloc</span>  
<span class="p">{</span>  
    <span class="p">[[</span><span class="kt">NSNotificationCenter</span> <span class="n">defaultCenter</span><span class="p">]</span> <span class="nv">removeObserver</span><span class="p">:</span><span class="k">self</span> <span class="nv">name</span><span class="p">:</span><span class="s">@"wechatDidLoginNotification"</span> <span class="nv">object</span><span class="p">:</span><span class="kc">nil</span><span class="p">];</span>  
<span class="p">}</span>  


</code></pre></div></div>

<p><strong>微信登录认证后获取用户的个人信息比较麻烦，需要三个步骤：</strong></p>

<blockquote>
  <ul>
    <li>获取微信登录code</li>
    <li>根据code获取accessToken和openId</li>
    <li>根据accessToken和openId获取用户信息</li>
  </ul>
</blockquote>

<p><strong>具体步骤：</strong></p>

<p>刚刚我们已经在<code class="highlighter-rouge">appdelegate</code>中微信的代理中获取到了<code class="highlighter-rouge">code</code>，下面直接来进行第二步，根据<code class="highlighter-rouge">code</code>获取<code class="highlighter-rouge">accessToken</code>和<code class="highlighter-rouge">openId</code>：
参照微信开放平台官方文档：</p>

<p><img src="http://upload-images.jianshu.io/upload_images/1269906-afc238a8d21aac3e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="" /></p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">getWechatAccessTokenWithCode</span><span class="p">:(</span><span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">code</span>  
<span class="p">{</span>  
    <span class="kt">NSString</span> <span class="o">*</span><span class="n">url</span> <span class="o">=</span><span class="p">[</span><span class="kt">NSString</span> <span class="nv">stringWithFormat</span><span class="p">:</span>  
      <span class="s">@"https://api.weixin.qq.com/sns/oauth2/access_token?appid=%@&amp;secret=%@&amp;code=%@&amp;grant_type=authorization_code"</span><span class="p">,</span>  
        <span class="kt">WechatAppKey</span><span class="p">,</span><span class="kt">WechatSecrectKey</span><span class="p">,</span><span class="n">code</span><span class="p">];</span>  
      
    <span class="nf">dispatch_async</span><span class="p">(</span><span class="nf">dispatch_get_global_queue</span><span class="p">(</span><span class="kt">DISPATCH_QUEUE_PRIORITY_DEFAULT</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="o">^</span><span class="p">{</span>  
        <span class="kt">NSURL</span> <span class="o">*</span><span class="n">zoneUrl</span> <span class="o">=</span> <span class="p">[</span><span class="kt">NSURL</span> <span class="kt">URLWithString</span><span class="p">:</span><span class="n">url</span><span class="p">];</span>  
        <span class="kt">NSString</span> <span class="o">*</span><span class="n">zoneStr</span> <span class="o">=</span> <span class="p">[</span><span class="kt">NSString</span> <span class="nv">stringWithContentsOfURL</span><span class="p">:</span><span class="n">zoneUrl</span> <span class="nv">encoding</span><span class="p">:</span><span class="kt">NSUTF8StringEncoding</span> <span class="nv">error</span><span class="p">:</span><span class="kc">nil</span><span class="p">];</span>  
        <span class="kt">NSData</span> <span class="o">*</span><span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="n">zoneStr</span> <span class="nv">dataUsingEncoding</span><span class="p">:</span><span class="kt">NSUTF8StringEncoding</span><span class="p">];</span>  
        <span class="nf">dispatch_async</span><span class="p">(</span><span class="nf">dispatch_get_main_queue</span><span class="p">(),</span> <span class="o">^</span><span class="p">{</span>  
              
            <span class="k">if</span> <span class="p">(</span><span class="n">data</span><span class="p">)</span>  
            <span class="p">{</span>  
                <span class="kt">NSDictionary</span> <span class="o">*</span><span class="n">dic</span> <span class="o">=</span> <span class="p">[</span><span class="kt">NSJSONSerialization</span> <span class="kt">JSONObjectWithData</span><span class="p">:</span><span class="n">data</span>   
                                                                    <span class="nv">options</span><span class="p">:</span><span class="kt">NSJSONReadingMutableContainers</span> <span class="nv">error</span><span class="p">:</span><span class="kc">nil</span><span class="p">];</span>  
                  
                <span class="kt">NSLog</span><span class="p">(</span><span class="s">@"%@"</span><span class="p">,</span><span class="n">dic</span><span class="p">);</span>  
                <span class="kt">NSString</span> <span class="o">*</span><span class="n">accessToken</span> <span class="o">=</span> <span class="n">dic</span><span class="p">[</span><span class="s">@"access_token"</span><span class="p">];</span>  
                <span class="kt">NSString</span> <span class="o">*</span><span class="n">openId</span> <span class="o">=</span> <span class="n">dic</span><span class="p">[</span><span class="s">@"openid"</span><span class="p">];</span>  
                  
                <span class="p">[</span><span class="k">self</span> <span class="nv">getWechatUserInfoWithAccessToken</span><span class="p">:</span><span class="n">accessToken</span> <span class="nv">openId</span><span class="p">:</span><span class="n">openId</span><span class="p">];</span>  
            <span class="p">}</span>  
        <span class="p">});</span>  
    <span class="p">});</span>  
<span class="p">}</span>  


</code></pre></div></div>

<p>现在已经获取了微信的<code class="highlighter-rouge">accessToken</code>和<code class="highlighter-rouge">openId</code>，就可以请求相应的微信接口了。
参照文档，我们使用以下接口：</p>

<p><img src="http://upload-images.jianshu.io/upload_images/1269906-4350c96c94ce8487.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="" /></p>

<p>使用这个接口就可以获取用户信息了，然后调用自己的方法进行登录，这里可以使用<code class="highlighter-rouge">openId</code>当做账号，他是每个微信用户唯一对应的<code class="highlighter-rouge">id</code></p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">getWechatUserInfoWithAccessToken</span><span class="p">:(</span><span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">accessToken</span> <span class="nv">openId</span><span class="p">:(</span><span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">openId</span>  
<span class="p">{</span>  
    <span class="kt">NSString</span> <span class="o">*</span><span class="n">url</span> <span class="o">=</span><span class="p">[</span><span class="kt">NSString</span> <span class="nv">stringWithFormat</span><span class="p">:</span>  
                    <span class="s">@"https://api.weixin.qq.com/sns/userinfo?access_token=%@&amp;openid=%@"</span><span class="p">,</span><span class="n">accessToken</span><span class="p">,</span><span class="n">openId</span><span class="p">];</span>  
      
    <span class="nf">dispatch_async</span><span class="p">(</span><span class="nf">dispatch_get_global_queue</span><span class="p">(</span><span class="kt">DISPATCH_QUEUE_PRIORITY_DEFAULT</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="o">^</span><span class="p">{</span>  
        <span class="kt">NSURL</span> <span class="o">*</span><span class="n">zoneUrl</span> <span class="o">=</span> <span class="p">[</span><span class="kt">NSURL</span> <span class="kt">URLWithString</span><span class="p">:</span><span class="n">url</span><span class="p">];</span>  
        <span class="kt">NSString</span> <span class="o">*</span><span class="n">zoneStr</span> <span class="o">=</span> <span class="p">[</span><span class="kt">NSString</span> <span class="nv">stringWithContentsOfURL</span><span class="p">:</span><span class="n">zoneUrl</span> <span class="nv">encoding</span><span class="p">:</span><span class="kt">NSUTF8StringEncoding</span> <span class="nv">error</span><span class="p">:</span><span class="kc">nil</span><span class="p">];</span>  
        <span class="kt">NSData</span> <span class="o">*</span><span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="n">zoneStr</span> <span class="nv">dataUsingEncoding</span><span class="p">:</span><span class="kt">NSUTF8StringEncoding</span><span class="p">];</span>  
        <span class="nf">dispatch_async</span><span class="p">(</span><span class="nf">dispatch_get_main_queue</span><span class="p">(),</span> <span class="o">^</span><span class="p">{</span>  
              
            <span class="k">if</span> <span class="p">(</span><span class="n">data</span><span class="p">)</span>  
            <span class="p">{</span>  
                <span class="kt">NSDictionary</span> <span class="o">*</span><span class="n">dic</span> <span class="o">=</span> <span class="p">[</span><span class="kt">NSJSONSerialization</span> <span class="kt">JSONObjectWithData</span><span class="p">:</span><span class="n">data</span>   
                                                                    <span class="nv">options</span><span class="p">:</span><span class="kt">NSJSONReadingMutableContainers</span> <span class="nv">error</span><span class="p">:</span><span class="kc">nil</span><span class="p">];</span>  
                  
                <span class="kt">NSLog</span><span class="p">(</span><span class="s">@"%@"</span><span class="p">,</span><span class="n">dic</span><span class="p">);</span>  
                  
                <span class="kt">NSString</span> <span class="o">*</span><span class="n">openId</span> <span class="o">=</span> <span class="p">[</span><span class="n">dic</span> <span class="nv">objectForKey</span><span class="p">:</span><span class="s">@"openid"</span><span class="p">];</span>  
                <span class="kt">NSString</span> <span class="o">*</span><span class="n">memNickName</span> <span class="o">=</span> <span class="p">[</span><span class="n">dic</span> <span class="nv">objectForKey</span><span class="p">:</span><span class="s">@"nickname"</span><span class="p">];</span>  
                <span class="kt">NSString</span> <span class="o">*</span><span class="n">memSex</span> <span class="o">=</span> <span class="p">[</span><span class="n">dic</span> <span class="nv">objectForKey</span><span class="p">:</span><span class="s">@"sex"</span><span class="p">];</span>  
                  
                <span class="p">[</span><span class="k">self</span> <span class="nv">loginWithOpenId</span><span class="p">:</span><span class="n">openId</span> <span class="nv">memNickName</span><span class="p">:</span><span class="n">memNickName</span> <span class="nv">memSex</span><span class="p">:</span><span class="n">memSex</span><span class="p">];</span>  
            <span class="p">}</span>  
        <span class="p">});</span>  
          
    <span class="p">});</span>  
<span class="p">}</span> 


</code></pre></div></div>

<p>至此，就实现了简单的微信登录</p>

<p>效果图：</p>

<p><img src="http://upload-images.jianshu.io/upload_images/1269906-7adef59824ff8291.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="" /></p>
:ET