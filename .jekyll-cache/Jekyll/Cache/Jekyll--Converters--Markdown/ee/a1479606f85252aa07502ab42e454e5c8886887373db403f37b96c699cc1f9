I"<Y<h2 id="前言">前言</h2>

<p>在开发APP的过程中，需要在APP中实现设计同学的UE效果动画，一般都是通过代码实现的，当对于较复杂的动画时，例如直播中刷礼物时的动画，这时利用代码实现会比较复杂。而且<code class="language-plaintext highlighter-rouge">Android</code>和<code class="language-plaintext highlighter-rouge">iOS</code>两端不好统一效果，如果用gif图片来实现的话，在图片大小和动画帧数之间很难权衡。而且会导致内存吃紧。为了解决这样的问题，今天来介绍两款实现复杂动画的开源库：<code class="language-plaintext highlighter-rouge">Lottie</code>和<code class="language-plaintext highlighter-rouge">SVGA</code>。</p>

<h2 id="lottie">Lottie</h2>

<blockquote>
  <p>Lottie is a mobile library for Android and iOS that parses Adobe After Effects animations exported as json with bodymovin and renders the vector animations natively on mobile and through React Native!</p>
</blockquote>

<p>大致意思是：<code class="language-plaintext highlighter-rouge">Lottie</code>是一个可以解析使用【<a href="https://github.com/airbnb/lottie-web">bodymovin</a>】插件从 <code class="language-plaintext highlighter-rouge">Adobe After Effects</code> 中导出的格式为<code class="language-plaintext highlighter-rouge">json</code>的文件，并在<code class="language-plaintext highlighter-rouge">iOS</code>、<code class="language-plaintext highlighter-rouge">Android</code>、<code class="language-plaintext highlighter-rouge">macOS</code>、<code class="language-plaintext highlighter-rouge">React Native</code>中进行解析使用的开源库。</p>

<p><a href="https://github.com/airbnb/lottie-ios">官方链接</a></p>

<p>部分效果：</p>

<p><img src="https://upload-images.jianshu.io/upload_images/1722373-7bf8a4735413147c.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/800/format/webp" alt="" /></p>

<p><img src="https://upload-images.jianshu.io/upload_images/1722373-2f17af8843802c88.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/800/format/webp" alt="" /></p>

<h3 id="优点缺点">优点&amp;&amp;缺点</h3>

<p><strong>优点：</strong></p>

<ul>
  <li>开发成本低，设计师导出json后，开发同学只需引用文件即可。</li>
  <li>支持服务端URL创建，服务端可以配置<code class="language-plaintext highlighter-rouge">json</code>文件，随时替换动画。</li>
  <li>性能提升，替换原使用帧图完成的动画，节省客户端空间和内存。</li>
  <li>跨平台，<code class="language-plaintext highlighter-rouge">iOS</code>、<code class="language-plaintext highlighter-rouge">Android</code>使用一套方案，效果统一。</li>
  <li>支持转场动画</li>
</ul>

<p><strong>缺点：</strong></p>

<ul>
  <li>对某些AE属性不支持。</li>
  <li>对平台有限制，iOS 8.0 以上，Android API 14 以上。</li>
  <li>交互动画不可行，主要是播放类型动画。</li>
</ul>

<h3 id="集成lottie">集成Lottie</h3>

<p>官方地址：<a href="https://github.com/airbnb/lottie-ios">https://github.com/airbnb/lottie-ios</a>，github 中有 Demo 提供学习。</p>

<p>集成方法可以使用Cocoapods，或手动集成。</p>

<p><strong>Cocoapods集成</strong></p>

<p>一、在podfile中添加：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pod 'lottie-ios'
</code></pre></div></div>
<p>二、运行</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pod install
</code></pre></div></div>

<p>假如你的项目之前集成过其他三方，比如<code class="language-plaintext highlighter-rouge">Masonry</code>，这个时候你编译项目，可能会报<code class="language-plaintext highlighter-rouge">code1</code>错误，当然没报错最好。稍安勿躁，人家官方文档说了，还得安装<code class="language-plaintext highlighter-rouge">Carthage</code>。</p>

<blockquote>
  <p><strong>安装Carthage</strong></p>

  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew install carthage
</code></pre></div>  </div>

  <p><strong>使用Carthage安装依赖</strong></p>

  <p>1、前往文件夹</p>

  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd ~/路径/项目文件夹
</code></pre></div>  </div>

  <p>2、创建一个空的 Carthage 文件 Cartfile</p>

  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>touch Cartfile
</code></pre></div>  </div>

  <p>3、使用 Xcode 打开 Cartfile 文件</p>

  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>open -a Xcode Cartfile
</code></pre></div>  </div>

  <p>4、在cartfile里面加一行代码</p>

  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>github "airbnb/lottie-ios" "master"
</code></pre></div>  </div>

  <p>5、终端执行更新命令</p>

  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>carthage update --platform iOS
</code></pre></div>  </div>
</blockquote>

<p><strong>手动集成Lottie</strong></p>

<p>将<code class="language-plaintext highlighter-rouge">demo</code>中的<code class="language-plaintext highlighter-rouge">lottie-ios</code>文件夹拖入项目中即可</p>

<h3 id="lottie的使用">Lottie的使用</h3>

<p>Lottie头文件：</p>

<p><code class="language-plaintext highlighter-rouge">LOTAnimationView.h</code></p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//创建视图的几个方法</span>
<span class="o">+</span> <span class="p">(</span><span class="n">instancetype</span><span class="p">)</span><span class="nv">animationNamed</span><span class="p">:(</span><span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">animationName</span> <span class="kt">NS_SWIFT_NAME</span><span class="p">(</span><span class="nf">init</span><span class="p">(</span><span class="nv">name</span><span class="p">:));</span>
<span class="o">+</span> <span class="p">(</span><span class="n">instancetype</span><span class="p">)</span><span class="nv">animationNamed</span><span class="p">:(</span><span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">animationName</span> <span class="nv">inBundle</span><span class="p">:(</span><span class="kt">NSBundle</span> <span class="o">*</span><span class="p">)</span><span class="n">bundle</span> <span class="kt">NS_SWIFT_NAME</span><span class="p">(</span><span class="nf">init</span><span class="p">(</span><span class="nv">name</span><span class="p">:</span><span class="nv">bundle</span><span class="p">:));</span>
<span class="o">+</span> <span class="p">(</span><span class="n">instancetype</span><span class="p">)</span><span class="nv">animationFromJSON</span><span class="p">:(</span><span class="kt">NSDictionary</span> <span class="o">*</span><span class="p">)</span><span class="n">animationJSON</span> <span class="kt">NS_SWIFT_NAME</span><span class="p">(</span><span class="nf">init</span><span class="p">(</span><span class="nv">json</span><span class="p">:));</span>
<span class="o">-</span> <span class="p">(</span><span class="n">instancetype</span><span class="p">)</span><span class="nv">initWithContentsOfURL</span><span class="p">:(</span><span class="kt">NSURL</span> <span class="o">*</span><span class="p">)</span><span class="n">url</span><span class="p">;</span>

<span class="c1">//可用属性</span>
<span class="kd">@property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">readonly</span><span class="p">)</span><span class="kt">BOOLisAnimationPlaying</span><span class="p">;</span>   <span class="c1">//是否正在动画</span>
<span class="kd">@property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">assign</span><span class="p">)</span><span class="kt">BOOLloopAnimation</span><span class="p">;</span>          <span class="c1">//是否循环播放动画</span>
<span class="kd">@property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">assign</span><span class="p">)</span><span class="kt">CGFloatanimationProgress</span><span class="p">;</span>   <span class="c1">//动画执行进度</span>
<span class="kd">@property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">assign</span><span class="p">)</span><span class="kt">CGFloatanimationSpeed</span><span class="p">;</span>      <span class="c1">//动画速度</span>
<span class="kd">@property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">readonly</span><span class="p">)</span><span class="kt">CGFloatanimationDuration</span><span class="p">;</span> <span class="c1">//动画时间</span>

<span class="c1">//实例方法</span>
<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">playWithCompletion</span><span class="p">:(</span><span class="kt">LOTAnimationCompletionBlock</span><span class="p">)</span><span class="n">completion</span><span class="p">;</span><span class="c1">//动画结束后可以执行一个block</span>
<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="n">play</span><span class="p">;</span>    <span class="c1">//播放</span>
<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="n">pause</span><span class="p">;</span>   <span class="c1">//暂停</span>
<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">addSubview</span><span class="p">:(</span><span class="kt">LOTView</span> <span class="o">*</span><span class="p">)</span><span class="n">view</span> <span class="nv">toLayerNamed</span><span class="p">:(</span><span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">layer</span><span class="p">;</span>

<span class="cp">#if !TARGET_OS_IPHONE &amp;&amp; !TARGET_IPHONE_SIMULATOR</span>
<span class="kd">@property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">)</span> <span class="kt">LOTViewContentMode</span> <span class="n">contentMode</span><span class="p">;</span><span class="c1">//非iOS的contentMode</span>
<span class="cp">#endif</span>
</code></pre></div></div>

<p>最简单粗暴的方式就是<code class="language-plaintext highlighter-rouge">LOTAnimationView</code>来进行初始化，也是比较常用的方式：</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">LOTAnimationView</span> <span class="o">*</span><span class="n">animation</span> <span class="o">=</span> <span class="p">[</span><span class="kt">LOTAnimationView</span> <span class="nv">animationNamed</span><span class="p">:</span><span class="s">@"Lottie"</span><span class="p">];</span>
<span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">view</span> <span class="nv">addSubview</span><span class="p">:</span><span class="n">animation</span><span class="p">];</span>
<span class="p">[</span><span class="n">animation</span> <span class="nv">playWithCompletion</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="kt">BOOL</span> <span class="n">animationFinished</span><span class="p">)</span> <span class="p">{</span>
  <span class="c1">// Do Something</span>
<span class="p">}];</span>
</code></pre></div></div>

<p>当你使用了多个<code class="language-plaintext highlighter-rouge">bundle</code>文件时，可以使用以下方法：</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">LOTAnimationView</span> <span class="o">*</span><span class="n">animation</span> <span class="o">=</span> <span class="p">[</span><span class="kt">LOTAnimationView</span> <span class="nv">animationNamed</span><span class="p">:</span><span class="s">@"Lottie"</span> <span class="nv">inBundle</span><span class="p">:[</span><span class="kt">NSBundle</span> <span class="kt">YOUR_BUNDLE</span><span class="p">]];</span>
<span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">view</span> <span class="nv">addSubview</span><span class="p">:</span><span class="n">animation</span><span class="p">];</span>
<span class="p">[</span><span class="n">animation</span> <span class="nv">playWithCompletion</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="kt">BOOL</span> <span class="n">animationFinished</span><span class="p">)</span> <span class="p">{</span>
  <span class="c1">// Do Something</span>
<span class="p">}];</span>
</code></pre></div></div>

<p>或者使用URL进行动态加载，注意这里json文件的图片则需要使用网络图片：</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">LOTAnimationView</span> <span class="o">*</span><span class="n">animation</span> <span class="o">=</span> <span class="p">[[</span><span class="kt">LOTAnimationView</span> <span class="n">alloc</span><span class="p">]</span> <span class="nv">initWithContentsOfURL</span><span class="p">:[</span><span class="kt">NSURL</span> <span class="kt">URLWithString</span><span class="p">:</span><span class="kt">URL</span><span class="p">]];</span>
<span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">view</span> <span class="nv">addSubview</span><span class="p">:</span><span class="n">animation</span><span class="p">];</span>
</code></pre></div></div>

<p>效果：</p>

<p>感谢老铁的火山！</p>

<p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fwyesgf1kdg309m0jq4qr.gif" alt="" /></p>

<h2 id="svga">SVGA</h2>

<p><a href="http://svga.io/">官方链接</a></p>

<p>SVGAConverter 可以将 Flash 以及 After Effects 动画导出成 .SVGA 文件（实际上是 ZIP 包），供 SVGAPlayer 在各平台播放，SVGAPlayer 支持在 iOS / Android / Web / ReactNative / LayaBox 等平台、游戏引擎播放。</p>

<p>SVGA 做的事情，实际上，非常简单，Converter 会负责从 Flash 或 AE 源文件中提取所有动画元素（位图、矢量），并将其在时间轴中的每帧表现（位移、缩放、旋转、透明度）导出。 Player 会负责将这些信息还原至画布上。</p>

<p>因此，你会发现，SVGA 既有序列帧的特点，又有元素动画的特点。Player 逻辑极度简单，她只负责粗暴地将每一个元素，丝毫不差地渲染到屏幕上，而无须任何插值计算。（我们认为，任何插件计算的逻辑都是复杂的）</p>

<p>也因此，你会发现，SVGA 不同于 Lottie，Lottie 需要在 Player 一层完整地将 After Effects 所有逻辑实现，而 SVGA 则将这些逻辑免去。也因此，SVGA 可以同时支持 Flash，我们相信 Flash 以及其继承者 Animate CC 仍然有强大的生命力，以及完善的设计生态。</p>

<p>SVGA 最初的目标是为降低序列帧动画开销而生的，因此，性能问题一直是 SVGA 关注的焦点。如果你可以深入地探究 SVGA 的实现方式，你会发现，SVGA 实质上做了一件非常重要的事情。她会在动画播放前，一次性地上传所有纹理到 GPU，接着，在播放的过程中，这些纹理会被重复使用。CPU 与 GPU 交换的次数大大减少，同时，纹理的数目也在可控范围。内存、CPU、GPU 占用能达到最优状态。</p>

<h3 id="svga的集成">SVGA的集成</h3>

<p>官方 GitHub：<a href="https://github.com/yyued/SVGAPlayer-iOS">https://github.com/yyued/SVGAPlayer-iOS</a>, GitHub 中有 Demo 提供学习。</p>

<p>一、在podfile中添加：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pod 'SVGAPlayer'
</code></pre></div></div>
<p>二、运行</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pod install
</code></pre></div></div>

<h3 id="手动集成踩雷">手动集成踩雷</h3>

<p>因为项目中未使用 Cocoapods ，所以要求手动集成 SVGA 到项目中，但是官方仅提供了 pods 的集成方法，下面来说下手动集成的问题：</p>

<p>1、在 <a href="https://github.com/yyued/SVGAPlayer-iOS">GitHub</a>中下载项目工程，将以下文件夹导入工程：</p>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">Protobuf</code>,<code class="language-plaintext highlighter-rouge">SSZipArchive</code>,<code class="language-plaintext highlighter-rouge">SVGAPlayer</code></p>
</blockquote>

<p>此时 build 可能会报错头文件不存在，采用以下方法：</p>

<blockquote>
  <p>Targets -&gt; Build Settings -&gt; Header Search Pahts 添加路径</p>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>"$(SRCROOT)/JFAnimationDemo/Libs/Protobuf/objectivec"
"$(SRCROOT)/JFAnimationDemo/Libs/SSZipArchive"
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">注意：</code>这里根据项目中具体类的位置进行相应的修改。</p>

<p>解决头文件不存在问题之后，下面可能会出现内存管理方法不可调用的问题。这是因为代码库中的部分类使用的是非ARC，所以需要对部分类进行配置：</p>

<blockquote>
  <p>Targets -&gt; Build Phrases -&gt; Compile Sources 修改以下类的 Compiler Flags</p>

  <p>设置 Compiler Flags 为 <code class="language-plaintext highlighter-rouge">-fno-objc-arc</code></p>
</blockquote>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">GPBCodedOutputStream.m</code>,
<code class="language-plaintext highlighter-rouge">GPBCodedInputStream.m</code>,
<code class="language-plaintext highlighter-rouge">GPBUnknownFieldSet.m</code>,
<code class="language-plaintext highlighter-rouge">GPBUtilities.m</code>,
<code class="language-plaintext highlighter-rouge">GPBExtensionInternals.m</code>,
<code class="language-plaintext highlighter-rouge">GPBArray.m</code>,
<code class="language-plaintext highlighter-rouge">GPBRootObject.m</code>,
<code class="language-plaintext highlighter-rouge">GPBExtensionRegistry.m</code>,
<code class="language-plaintext highlighter-rouge">GPBDescriptor.m</code>,
<code class="language-plaintext highlighter-rouge">Struct.pbobjc.m</code>,
<code class="language-plaintext highlighter-rouge">GPBWellKnownTypes.m</code>,
<code class="language-plaintext highlighter-rouge">Svga.pbobjc.m</code>,
<code class="language-plaintext highlighter-rouge">GPBDictionary.m</code>,
<code class="language-plaintext highlighter-rouge">Type.pbobjc.m</code>,
<code class="language-plaintext highlighter-rouge">GPBMessage.m</code>,
<code class="language-plaintext highlighter-rouge">GPBUnknownField.m</code></p>
</blockquote>

<h3 id="svga的使用">SVGA的使用</h3>

<p>首先初始化 <code class="language-plaintext highlighter-rouge">SVGAPlayer</code> 对象：</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">-</span> <span class="p">(</span><span class="kt">SVGAPlayer</span> <span class="o">*</span><span class="p">)</span><span class="n">svgaPlayer</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">_svgaPlayer</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">_svgaPlayer</span> <span class="o">=</span> <span class="p">[[</span><span class="kt">SVGAPlayer</span> <span class="n">alloc</span><span class="p">]</span> <span class="kd">init</span><span class="p">];</span>
        <span class="n">_svgaPlayer</span><span class="o">.</span><span class="n">frame</span> <span class="o">=</span> <span class="k">self</span><span class="o">.</span><span class="n">bounds</span><span class="p">;</span>
        <span class="n">_svgaPlayer</span><span class="o">.</span><span class="n">loops</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="n">_svgaPlayer</span><span class="o">.</span><span class="n">clearsAfterStop</span> <span class="o">=</span> <span class="kt">YES</span><span class="p">;</span>
        <span class="n">_svgaPlayer</span><span class="o">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="k">self</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">_svgaPlayer</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>然后初始化 <code class="language-plaintext highlighter-rouge">SVGAParser</code> 对象：</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">-</span> <span class="p">(</span><span class="kt">SVGAParser</span> <span class="o">*</span><span class="p">)</span><span class="n">svgaParser</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">_svgaParser</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">_svgaParser</span> <span class="o">=</span> <span class="p">[[</span><span class="kt">SVGAParser</span> <span class="n">alloc</span><span class="p">]</span> <span class="kd">init</span><span class="p">];</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">_svgaParser</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>加载动画，主要有三种方式：</p>

<ul>
  <li>URL、Request</li>
  <li>Data</li>
  <li>Name</li>
</ul>

<p><code class="language-plaintext highlighter-rouge">SVGAParser.h</code> 头文件中有如下方法：</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">parseWithURL</span><span class="p">:(</span><span class="n">nonnull</span> <span class="kt">NSURL</span> <span class="o">*</span><span class="p">)</span><span class="kt">URL</span>
     <span class="nv">completionBlock</span><span class="p">:(</span><span class="nf">void</span> <span class="p">(</span> <span class="o">^</span> <span class="n">_Nonnull</span> <span class="p">)(</span><span class="kt">SVGAVideoEntity</span> <span class="o">*</span> <span class="n">_Nullable</span> <span class="n">videoItem</span><span class="p">))</span><span class="n">completionBlock</span>
        <span class="nv">failureBlock</span><span class="p">:(</span><span class="nf">void</span> <span class="p">(</span> <span class="o">^</span> <span class="n">_Nullable</span><span class="p">)(</span><span class="kt">NSError</span> <span class="o">*</span> <span class="n">_Nullable</span> <span class="n">error</span><span class="p">))</span><span class="n">failureBlock</span><span class="p">;</span>

<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">parseWithURLRequest</span><span class="p">:(</span><span class="n">nonnull</span> <span class="kt">NSURLRequest</span> <span class="o">*</span><span class="p">)</span><span class="kt">URLRequest</span>
            <span class="nv">completionBlock</span><span class="p">:(</span><span class="nf">void</span> <span class="p">(</span> <span class="o">^</span> <span class="n">_Nonnull</span> <span class="p">)(</span><span class="kt">SVGAVideoEntity</span> <span class="o">*</span> <span class="n">_Nullable</span> <span class="n">videoItem</span><span class="p">))</span><span class="n">completionBlock</span>
               <span class="nv">failureBlock</span><span class="p">:(</span><span class="nf">void</span> <span class="p">(</span> <span class="o">^</span> <span class="n">_Nullable</span><span class="p">)(</span><span class="kt">NSError</span> <span class="o">*</span> <span class="n">_Nullable</span> <span class="n">error</span><span class="p">))</span><span class="n">failureBlock</span><span class="p">;</span>

<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">parseWithData</span><span class="p">:(</span><span class="n">nonnull</span> <span class="kt">NSData</span> <span class="o">*</span><span class="p">)</span><span class="n">data</span>
             <span class="nv">cacheKey</span><span class="p">:(</span><span class="n">nonnull</span> <span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">cacheKey</span>
      <span class="nv">completionBlock</span><span class="p">:(</span><span class="nf">void</span> <span class="p">(</span> <span class="o">^</span> <span class="n">_Nullable</span><span class="p">)(</span><span class="kt">SVGAVideoEntity</span> <span class="o">*</span> <span class="n">_Nonnull</span> <span class="n">videoItem</span><span class="p">))</span><span class="n">completionBlock</span>
         <span class="nv">failureBlock</span><span class="p">:(</span><span class="nf">void</span> <span class="p">(</span> <span class="o">^</span> <span class="n">_Nullable</span><span class="p">)(</span><span class="kt">NSError</span> <span class="o">*</span> <span class="n">_Nonnull</span> <span class="n">error</span><span class="p">))</span><span class="n">failureBlock</span><span class="p">;</span>

<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">parseWithNamed</span><span class="p">:(</span><span class="n">nonnull</span> <span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">named</span>
              <span class="nv">inBundle</span><span class="p">:(</span><span class="n">nullable</span> <span class="kt">NSBundle</span> <span class="o">*</span><span class="p">)</span><span class="n">inBundle</span>
       <span class="nv">completionBlock</span><span class="p">:(</span><span class="nf">void</span> <span class="p">(</span> <span class="o">^</span> <span class="n">_Nullable</span><span class="p">)(</span><span class="kt">SVGAVideoEntity</span> <span class="o">*</span> <span class="n">_Nonnull</span> <span class="n">videoItem</span><span class="p">))</span><span class="n">completionBlock</span>
          <span class="nv">failureBlock</span><span class="p">:(</span><span class="nf">void</span> <span class="p">(</span> <span class="o">^</span> <span class="n">_Nullable</span><span class="p">)(</span><span class="kt">NSError</span> <span class="o">*</span> <span class="n">_Nonnull</span> <span class="n">error</span><span class="p">))</span><span class="n">failureBlock</span><span class="p">;</span>
</code></pre></div></div>

<p>调用此方法后，将返回的 <code class="language-plaintext highlighter-rouge">videoItem</code> 对象赋值，然后开始加载动画：</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">__weak</span> <span class="nf">__typeof</span><span class="p">(</span><span class="o">&amp;*</span><span class="k">self</span><span class="p">)</span><span class="n">weakSelf</span> <span class="o">=</span> <span class="k">self</span><span class="p">;</span>

<span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">svgaParser</span> <span class="nv">parseWithNamed</span><span class="p">:</span><span class="k">self</span><span class="o">.</span><span class="n">animationName</span> <span class="nv">inBundle</span><span class="p">:</span><span class="kc">nil</span> <span class="nv">completionBlock</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="kt">SVGAVideoEntity</span> <span class="o">*</span> <span class="n">_Nonnull</span> <span class="n">videoItem</span><span class="p">)</span> <span class="p">{</span>
                
	<span class="n">__strong</span> <span class="nf">__typeof</span><span class="p">(</span><span class="k">self</span><span class="p">)</span><span class="n">strongSelf</span> <span class="o">=</span> <span class="n">weakSelf</span><span class="p">;</span>
	<span class="n">strongSelf</span><span class="o">.</span><span class="n">svgaPlayer</span><span class="o">.</span><span class="n">videoItem</span> <span class="o">=</span> <span class="n">videoItem</span><span class="p">;</span>
	<span class="p">[</span><span class="n">strongSelf</span><span class="o">.</span><span class="n">svgaPlayer</span> <span class="n">startAnimation</span><span class="p">];</span>
                
<span class="p">}</span> <span class="nv">failureBlock</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="kt">NSError</span> <span class="o">*</span> <span class="n">_Nonnull</span> <span class="n">error</span><span class="p">)</span> <span class="p">{</span>
                
	<span class="kt">NSLog</span><span class="p">(</span><span class="s">@"Error: %@"</span><span class="p">,</span><span class="n">error</span><span class="p">);</span>
                
<span class="p">}];</span>
</code></pre></div></div>

<p><strong>效果：</strong></p>

<p>感谢老铁的香吻！</p>

<p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fwyfwpw7t2g309m0jqkbn.gif" alt="" /></p>

<h3 id="one-more-thing">One More Thing</h3>

<p>SVGA 的官方库中提供了替换图层的 API ，什么意思呢？</p>

<p>可能我们会有这样的需求：我们所需要的动画中，部分图层是需要可配置的，例如以下效果：</p>

<p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fwygdezcjng308a08g75k.gif" alt="" /></p>

<p>需求要求配对双方的头像可配置，而且需配置他们的用户名，这时我们可以调用以下方法进行实现。</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#pragma mark - Dynamic Object</span>

<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">setImage</span><span class="p">:(</span><span class="kt">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="n">image</span> <span class="nv">forKey</span><span class="p">:(</span><span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">aKey</span><span class="p">;</span>
<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">setImageWithURL</span><span class="p">:(</span><span class="kt">NSURL</span> <span class="o">*</span><span class="p">)</span><span class="kt">URL</span> <span class="nv">forKey</span><span class="p">:(</span><span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">aKey</span><span class="p">;</span>
<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">setImage</span><span class="p">:(</span><span class="kt">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="n">image</span> <span class="nv">forKey</span><span class="p">:(</span><span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">aKey</span> <span class="nv">referenceLayer</span><span class="p">:(</span><span class="kt">CALayer</span> <span class="o">*</span><span class="p">)</span><span class="n">referenceLayer</span><span class="p">;</span> <span class="c1">// deprecated from 2.0.1</span>
<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">setAttributedText</span><span class="p">:(</span><span class="kt">NSAttributedString</span> <span class="o">*</span><span class="p">)</span><span class="n">attributedText</span> <span class="nv">forKey</span><span class="p">:(</span><span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">aKey</span><span class="p">;</span>
</code></pre></div></div>

<p>这里的 key 是事先和设计同学商定的，也可以拿到 SVGA 文件后进行解析，这里官网提供了一个在线的解析网址：<a href="http://svga.io/svga-preview.html">http://svga.io/svga-preview.html</a>,</p>

<p>可以解析 SVGA 文件中用户头像的图层名称为 “user1” 调用相应方法进行替换即可。</p>

<p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fwygi4g5lkj31kw0v5gt3.jpg" alt="" /></p>

<p>替换图层之后的效果：</p>

<p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fwyglyds7jg308a08gdhx.gif" alt="" /></p>

<h2 id="the-last">The Last</h2>

<p>项目中同时集成了 SVGA、Lottie 两套代码库，为了平时更高效的进行开发，将其封装为同一工具类，暴露出共有部分，方便使用。写的不好的地方，大家多提意见😉</p>

<p><code class="language-plaintext highlighter-rouge">JFAnimationView.h</code></p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//</span>
<span class="c1">//  JFAnimationView.h</span>
<span class="c1">//  AnimationDemo</span>
<span class="c1">//</span>
<span class="c1">//  Created by Japho on 2018/10/31.</span>
<span class="c1">//  Copyright © 2018 Japho. All rights reserved.</span>
<span class="c1">//</span>

<span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
<span class="cp">#import "SVGAPlayer.h"</span>

<span class="kt">NS_ASSUME_NONNULL_BEGIN</span>

<span class="kd">@class</span> <span class="kt">JFAnimationView</span><span class="p">;</span>

<span class="n">typedef</span> <span class="kt">NS_ENUM</span><span class="p">(</span><span class="kt">NSUInteger</span><span class="p">,</span> <span class="kt">JFAnimationType</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">AnimationTypeSVGA</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
    <span class="kt">AnimationTypeLottie</span>
<span class="p">};</span>

<span class="n">typedef</span> <span class="nf">void</span> <span class="p">(</span><span class="o">^</span><span class="kt">JFAnimationCompletionBlock</span><span class="p">)(</span><span class="kt">BOOL</span> <span class="n">animationFinished</span><span class="p">);</span>
<span class="n">typedef</span> <span class="nf">void</span> <span class="p">(</span><span class="o">^</span><span class="kt">JFAnimationResourceCompletionBlcok</span><span class="p">)(</span><span class="kt">CGRect</span> <span class="n">animationBounds</span><span class="p">,</span> <span class="kt">BOOL</span> <span class="n">loadFinished</span><span class="p">);</span>

<span class="kd">@protocol</span> <span class="kt">JFAnimationViewDelegate</span> <span class="o">&lt;</span><span class="kt">NSObject</span><span class="o">&gt;</span>


<span class="cm">/**
 动画结束回调代理

 @param animationView 动画视图
 */</span>
<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">animationViewDidFinishedAnimation</span><span class="p">:(</span><span class="kt">JFAnimationView</span> <span class="o">*</span><span class="p">)</span><span class="n">animationView</span><span class="p">;</span>


<span class="cm">/**
 动画调用失败

 @param animationView 动画视图
 */</span>
<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">animationViewDidFailed</span><span class="p">:(</span><span class="kt">JFAnimationView</span> <span class="o">*</span><span class="p">)</span><span class="n">animationView</span><span class="p">;</span>

<span class="kd">@end</span>

<span class="kd">@interface</span> <span class="kt">JFAnimationView</span> <span class="p">:</span> <span class="kt">UIView</span>

<span class="kd">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">assign</span><span class="p">)</span> <span class="kt">JFAnimationType</span> <span class="n">animationType</span><span class="p">;</span> <span class="c1">//在设置其他属性之前，需设置此属性</span>
<span class="kd">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">assign</span><span class="p">)</span> <span class="kt">BOOL</span> <span class="n">loopAnimation</span><span class="p">;</span>   <span class="c1">//动画是否循环</span>
<span class="kd">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">assign</span><span class="p">)</span> <span class="n">id</span><span class="o">&lt;</span><span class="kt">JFAnimationViewDelegate</span><span class="o">&gt;</span> <span class="n">delegate</span><span class="p">;</span>
<span class="kd">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">copy</span><span class="p">)</span> <span class="kt">JFAnimationCompletionBlock</span> <span class="n">completionBlock</span><span class="p">;</span> <span class="c1">//动画完成回调block</span>
<span class="kd">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">copy</span><span class="p">)</span> <span class="kt">JFAnimationResourceCompletionBlcok</span> <span class="n">resourceComplitionBlock</span><span class="p">;</span> <span class="c1">//动画资源加载完成动画</span>


<span class="cm">/**
 类初始化方法

 @param frame frame
 @param animationType 动画类型
 @return 动画视图
 */</span>
<span class="o">+</span> <span class="p">(</span><span class="n">instancetype</span><span class="p">)</span><span class="nv">animationViewWithFrame</span><span class="p">:(</span><span class="kt">CGRect</span><span class="p">)</span><span class="n">frame</span> <span class="nv">animationType</span><span class="p">:(</span><span class="kt">JFAnimationType</span><span class="p">)</span><span class="n">animationType</span><span class="p">;</span>

<span class="cm">/**
 对象初始化方法

 @param frame frame
 @param animationType 动画类型
 @return 动画视图
 */</span>
<span class="o">-</span> <span class="p">(</span><span class="n">instancetype</span><span class="p">)</span><span class="nv">initWithFrame</span><span class="p">:(</span><span class="kt">CGRect</span><span class="p">)</span><span class="n">frame</span> <span class="nv">animationType</span><span class="p">:(</span><span class="kt">JFAnimationType</span><span class="p">)</span><span class="n">animationType</span><span class="p">;</span>

<span class="cm">/**
 设置本地动画资源

 @param name 本地动画名称
 @param bundle 图片bundle
 @param resourceComplition 资源加载完成回调 返回动画bounds，及是否加载完成状态（完成状态只有SVGA会返回）
 */</span>
<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">setAnimationResourceWithName</span><span class="p">:(</span><span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">name</span> <span class="nv">bundle</span><span class="p">:(</span><span class="kt">NSBundle</span> <span class="o">*</span><span class="p">)</span><span class="n">bundle</span> <span class="nv">resourceCompliton</span><span class="p">:(</span><span class="kt">JFAnimationResourceCompletionBlcok</span><span class="p">)</span><span class="n">resourceComplition</span><span class="p">;</span>

<span class="cm">/**
 设置网络动画资源

 @param urlString urlString
 @param resourceComplition 资源加载完成回调 返回动画bounds，及是否加载完成状态（完成状态只有SVGA会返回）
 */</span>
<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">setAnimationResourceWithUrlString</span><span class="p">:(</span><span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">urlString</span> <span class="nv">resourceComplition</span><span class="p">:(</span><span class="kt">JFAnimationResourceCompletionBlcok</span><span class="p">)</span><span class="n">resourceComplition</span><span class="p">;</span>

<span class="cm">/**
 开始动画
 */</span>
<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="n">startAnimating</span><span class="p">;</span>


<span class="cm">/**
 结束动画
 */</span>
<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="n">stopAnimating</span><span class="p">;</span>


<span class="cm">/**
 开始动画

 @param completion 动画完成后回调 （只有Lottie会返回是否成功状态）
 */</span>
<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">startAnimatingWithCompletion</span><span class="p">:(</span><span class="kt">JFAnimationCompletionBlock</span><span class="p">)</span><span class="n">completion</span><span class="p">;</span>


<span class="cm">/**
 替换SGVA动画中的图片

 解析SVGA资源文件：http://svga.io/svga-preview.html
 
 @param image 将要替换的资源图片
 @param key SVGA动画中被替换资源图片的key
 */</span>
<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">setImage</span><span class="p">:(</span><span class="kt">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="n">image</span> <span class="nv">forSVGAAnimationWithKey</span><span class="p">:(</span><span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">key</span><span class="p">;</span>


<span class="cm">/**
 设置SVGA动画中图片上方文字

 解析SVGA资源文件：http://svga.io/svga-preview.html
 
 @param attributedText attributedText
 @param key SVGA动画中添加文字于资源图片的key
 */</span>
<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">setAttributedText</span><span class="p">:(</span><span class="kt">NSAttributedString</span> <span class="o">*</span><span class="p">)</span><span class="n">attributedText</span> <span class="nv">forSVGAAnimationWithKey</span><span class="p">:(</span><span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">key</span><span class="p">;</span>


<span class="cm">/**
 设置SVGA动画中替换Layer
 
 解析SVGA资源文件：http://svga.io/svga-preview.html

 @param drawingBlock 将自定义Layer添加至contentLayer上
 @param key SVGA动画中替换layer的key
 */</span>
<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">setDrawingBlock</span><span class="p">:(</span><span class="kt">SVGAPlayerDynamicDrawingBlock</span><span class="p">)</span><span class="n">drawingBlock</span> <span class="nv">forSVGAAnimationWithKey</span><span class="p">:(</span><span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">key</span><span class="p">;</span>

<span class="kd">@end</span>

<span class="kt">NS_ASSUME_NONNULL_END</span>

</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">JFAnimationView.m</code></p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//</span>
<span class="c1">//  JFAnimationView.m</span>
<span class="c1">//  AnimationDemo</span>
<span class="c1">//</span>
<span class="c1">//  Created by Japho on 2018/10/31.</span>
<span class="c1">//  Copyright © 2018 Japho. All rights reserved.</span>
<span class="c1">//</span>

<span class="cp">#import "JFAnimationView.h"</span>
<span class="cp">#import "SVGA.h"</span>
<span class="cp">#import "Lottie.h"</span>

<span class="kd">@interface</span> <span class="kt">JFAnimationView</span> <span class="p">()</span> <span class="o">&lt;</span><span class="kt">SVGAPlayerDelegate</span><span class="o">&gt;</span>

<span class="kd">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">strong</span><span class="p">)</span> <span class="kt">SVGAPlayer</span> <span class="o">*</span><span class="n">svgaPlayer</span><span class="p">;</span>
<span class="kd">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">strong</span><span class="p">)</span> <span class="kt">SVGAParser</span> <span class="o">*</span><span class="n">svgaParser</span><span class="p">;</span>
<span class="kd">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">strong</span><span class="p">)</span> <span class="kt">LOTAnimationView</span> <span class="o">*</span><span class="n">lotAnimationView</span><span class="p">;</span>
<span class="kd">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">assign</span><span class="p">)</span> <span class="kt">BOOL</span> <span class="n">hasSVGALoad</span><span class="p">;</span>
<span class="kd">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">assign</span><span class="p">)</span> <span class="kt">BOOL</span> <span class="n">hasLottieLoad</span><span class="p">;</span>

<span class="kd">@end</span>

<span class="kd">@implementation</span> <span class="kt">JFAnimationView</span>

<span class="o">-</span> <span class="p">(</span><span class="n">instancetype</span><span class="p">)</span><span class="nv">initWithFrame</span><span class="p">:(</span><span class="kt">CGRect</span><span class="p">)</span><span class="n">frame</span>
<span class="p">{</span>
    <span class="k">self</span> <span class="o">=</span> <span class="p">[</span><span class="k">super</span> <span class="nv">initWithFrame</span><span class="p">:</span><span class="n">frame</span><span class="p">];</span>
    
    <span class="k">if</span> <span class="p">(</span><span class="k">self</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">_animationType</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="k">self</span><span class="p">;</span>
<span class="p">}</span>

<span class="o">+</span> <span class="p">(</span><span class="n">instancetype</span><span class="p">)</span><span class="nv">animationViewWithFrame</span><span class="p">:(</span><span class="kt">CGRect</span><span class="p">)</span><span class="n">frame</span> <span class="nv">animationType</span><span class="p">:(</span><span class="kt">JFAnimationType</span><span class="p">)</span><span class="n">animationType</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="p">[[</span><span class="kt">JFAnimationView</span> <span class="n">alloc</span><span class="p">]</span> <span class="nv">initWithFrame</span><span class="p">:</span><span class="n">frame</span> <span class="nv">animationType</span><span class="p">:</span><span class="n">animationType</span><span class="p">];</span>
<span class="p">}</span>

<span class="o">-</span> <span class="p">(</span><span class="n">instancetype</span><span class="p">)</span><span class="nv">initWithFrame</span><span class="p">:(</span><span class="kt">CGRect</span><span class="p">)</span><span class="n">frame</span> <span class="nv">animationType</span><span class="p">:(</span><span class="kt">JFAnimationType</span><span class="p">)</span><span class="n">animationType</span>
<span class="p">{</span>
    <span class="k">self</span> <span class="o">=</span> <span class="p">[</span><span class="k">super</span> <span class="nv">initWithFrame</span><span class="p">:</span><span class="n">frame</span><span class="p">];</span>
    
    <span class="k">if</span> <span class="p">(</span><span class="k">self</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">self</span><span class="o">.</span><span class="n">animationType</span> <span class="o">=</span> <span class="n">animationType</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="k">self</span><span class="p">;</span>
<span class="p">}</span>

<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">setAnimationResourceWithName</span><span class="p">:(</span><span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">name</span> <span class="nv">bundle</span><span class="p">:(</span><span class="kt">NSBundle</span> <span class="o">*</span><span class="p">)</span><span class="n">bundle</span> <span class="nv">resourceCompliton</span><span class="p">:(</span><span class="n">nonnull</span> <span class="kt">JFAnimationResourceCompletionBlcok</span><span class="p">)</span><span class="n">resourceComplition</span>
<span class="p">{</span>
    <span class="kt">NSArray</span> <span class="o">*</span><span class="n">components</span> <span class="o">=</span> <span class="p">[</span><span class="n">name</span> <span class="nv">componentsSeparatedByString</span><span class="p">:</span><span class="s">@"."</span><span class="p">];</span>
    <span class="n">name</span> <span class="o">=</span> <span class="n">components</span><span class="o">.</span><span class="n">firstObject</span><span class="p">;</span>
    
    <span class="k">switch</span> <span class="p">(</span><span class="k">self</span><span class="o">.</span><span class="n">animationType</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">case</span> <span class="kt">AnimationTypeSVGA</span><span class="p">:</span>
        <span class="p">{</span>
            <span class="n">__weak</span> <span class="nf">__typeof</span><span class="p">(</span><span class="o">&amp;*</span><span class="k">self</span><span class="p">)</span><span class="n">weakSelf</span> <span class="o">=</span> <span class="k">self</span><span class="p">;</span>
            
            <span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">svgaParser</span> <span class="nv">parseWithNamed</span><span class="p">:</span><span class="n">name</span> <span class="nv">inBundle</span><span class="p">:</span><span class="n">bundle</span> <span class="nv">completionBlock</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="kt">SVGAVideoEntity</span> <span class="o">*</span> <span class="n">_Nonnull</span> <span class="n">videoItem</span><span class="p">)</span> <span class="p">{</span>
                
                <span class="n">__strong</span> <span class="nf">__typeof</span><span class="p">(</span><span class="k">self</span><span class="p">)</span><span class="n">strongSelf</span> <span class="o">=</span> <span class="n">weakSelf</span><span class="p">;</span>
                <span class="n">strongSelf</span><span class="o">.</span><span class="n">svgaPlayer</span><span class="o">.</span><span class="n">videoItem</span> <span class="o">=</span> <span class="n">videoItem</span><span class="p">;</span>
                
                <span class="kt">CGRect</span> <span class="n">bounds</span> <span class="o">=</span> <span class="kt">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">videoItem</span><span class="o">.</span><span class="n">videoSize</span><span class="o">.</span><span class="n">width</span><span class="p">,</span> <span class="n">videoItem</span><span class="o">.</span><span class="n">videoSize</span><span class="o">.</span><span class="n">height</span><span class="p">);</span>
                <span class="nf">resourceComplition</span><span class="p">(</span><span class="n">bounds</span><span class="p">,</span> <span class="kt">YES</span><span class="p">);</span>
                
            <span class="p">}</span> <span class="nv">failureBlock</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="kt">NSError</span> <span class="o">*</span> <span class="n">_Nonnull</span> <span class="n">error</span><span class="p">)</span> <span class="p">{</span>
                
                <span class="kt">NSLog</span><span class="p">(</span><span class="s">@"Error: %@"</span><span class="p">,</span><span class="n">error</span><span class="p">);</span>
                <span class="nf">resourceComplition</span><span class="p">(</span><span class="kt">CGRectZero</span><span class="p">,</span> <span class="kt">NO</span><span class="p">);</span>
                
            <span class="p">}];</span>
            
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">case</span> <span class="kt">AnimationTypeLottie</span><span class="p">:</span>
        <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">bundle</span> <span class="o">==</span> <span class="kc">nil</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">bundle</span> <span class="o">=</span> <span class="p">[</span><span class="kt">NSBundle</span> <span class="n">mainBundle</span><span class="p">];</span>
            <span class="p">}</span>
            
            <span class="kt">LOTComposition</span> <span class="o">*</span><span class="n">comp</span> <span class="o">=</span> <span class="p">[</span><span class="kt">LOTComposition</span> <span class="nv">animationNamed</span><span class="p">:</span><span class="n">name</span> <span class="nv">inBundle</span><span class="p">:</span><span class="n">bundle</span><span class="p">];</span>
            <span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">lotAnimationView</span> <span class="nv">setSceneModel</span><span class="p">:</span><span class="n">comp</span><span class="p">];</span>
            <span class="nf">resourceComplition</span><span class="p">(</span><span class="n">comp</span><span class="o">.</span><span class="n">compBounds</span><span class="p">,</span> <span class="kt">YES</span><span class="p">);</span>
            
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">default</span><span class="p">:</span>
            <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">setAnimationResourceWithUrlString</span><span class="p">:(</span><span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">urlString</span> <span class="nv">resourceComplition</span><span class="p">:(</span><span class="kt">JFAnimationResourceCompletionBlcok</span><span class="p">)</span><span class="n">resourceComplition</span>
<span class="p">{</span>
    <span class="k">switch</span> <span class="p">(</span><span class="k">self</span><span class="o">.</span><span class="n">animationType</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">case</span> <span class="kt">AnimationTypeSVGA</span><span class="p">:</span>
        <span class="p">{</span>
            <span class="n">__weak</span> <span class="nf">__typeof</span><span class="p">(</span><span class="o">&amp;*</span><span class="k">self</span><span class="p">)</span><span class="n">weakSelf</span> <span class="o">=</span> <span class="k">self</span><span class="p">;</span>
            
            <span class="kt">NSData</span> <span class="o">*</span><span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="kt">NSData</span> <span class="nv">dataWithContentsOfFile</span><span class="p">:</span><span class="n">urlString</span><span class="p">];</span>
            
            <span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">svgaParser</span> <span class="nv">parseWithData</span><span class="p">:</span><span class="n">data</span> <span class="nv">cacheKey</span><span class="p">:</span><span class="n">urlString</span> <span class="nv">completionBlock</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="kt">SVGAVideoEntity</span> <span class="o">*</span> <span class="n">_Nonnull</span> <span class="n">videoItem</span><span class="p">)</span> <span class="p">{</span>
                
                <span class="n">__strong</span> <span class="nf">__typeof</span><span class="p">(</span><span class="k">self</span><span class="p">)</span><span class="n">strongSelf</span> <span class="o">=</span> <span class="n">weakSelf</span><span class="p">;</span>
                <span class="n">strongSelf</span><span class="o">.</span><span class="n">svgaPlayer</span><span class="o">.</span><span class="n">videoItem</span> <span class="o">=</span> <span class="n">videoItem</span><span class="p">;</span>
                
                <span class="kt">CGRect</span> <span class="n">bounds</span> <span class="o">=</span> <span class="kt">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">videoItem</span><span class="o">.</span><span class="n">videoSize</span><span class="o">.</span><span class="n">width</span><span class="p">,</span> <span class="n">videoItem</span><span class="o">.</span><span class="n">videoSize</span><span class="o">.</span><span class="n">height</span><span class="p">);</span>
                <span class="nf">resourceComplition</span><span class="p">(</span><span class="n">bounds</span><span class="p">,</span> <span class="kt">YES</span><span class="p">);</span>
                
            <span class="p">}</span> <span class="nv">failureBlock</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="kt">NSError</span> <span class="o">*</span> <span class="n">_Nonnull</span> <span class="n">error</span><span class="p">)</span> <span class="p">{</span>
                
                <span class="kt">NSLog</span><span class="p">(</span><span class="s">@"Error: %@"</span><span class="p">,</span><span class="n">error</span><span class="p">);</span>
                
                <span class="nf">resourceComplition</span><span class="p">(</span><span class="kt">CGRectZero</span><span class="p">,</span> <span class="kt">NO</span><span class="p">);</span>
                
            <span class="p">}];</span>
            
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">case</span> <span class="kt">AnimationTypeLottie</span><span class="p">:</span>
        <span class="p">{</span>
            <span class="kt">LOTComposition</span> <span class="o">*</span><span class="n">laScene</span> <span class="o">=</span> <span class="p">[[</span><span class="kt">LOTAnimationCache</span> <span class="n">sharedCache</span><span class="p">]</span> <span class="nv">animationForKey</span><span class="p">:</span><span class="n">urlString</span><span class="p">];</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">laScene</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">laScene</span><span class="o">.</span><span class="n">cacheKey</span> <span class="o">=</span> <span class="n">urlString</span><span class="p">;</span>
                <span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">lotAnimationView</span> <span class="nv">setSceneModel</span><span class="p">:</span><span class="n">laScene</span><span class="p">];</span>
                <span class="nf">resourceComplition</span><span class="p">(</span><span class="n">laScene</span><span class="o">.</span><span class="n">compBounds</span><span class="p">,</span> <span class="kt">YES</span><span class="p">);</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="nf">dispatch_async</span><span class="p">(</span><span class="nf">dispatch_get_global_queue</span><span class="p">(</span><span class="kt">DISPATCH_QUEUE_PRIORITY_DEFAULT</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="o">^</span><span class="p">(</span><span class="n">void</span><span class="p">)</span> <span class="p">{</span>
                    
                    <span class="kt">LOTComposition</span> <span class="o">*</span><span class="n">laScene</span> <span class="o">=</span> <span class="p">[</span><span class="kt">LOTComposition</span> <span class="nv">animationWithFilePath</span><span class="p">:</span><span class="n">urlString</span><span class="p">];</span>
                    
                    <span class="nf">dispatch_async</span><span class="p">(</span><span class="nf">dispatch_get_main_queue</span><span class="p">(),</span> <span class="o">^</span><span class="p">(</span><span class="n">void</span><span class="p">)</span> <span class="p">{</span>
                        <span class="p">[[</span><span class="kt">LOTAnimationCache</span> <span class="n">sharedCache</span><span class="p">]</span> <span class="nv">addAnimation</span><span class="p">:</span><span class="n">laScene</span> <span class="nv">forKey</span><span class="p">:</span><span class="n">urlString</span><span class="p">];</span>
                        <span class="n">laScene</span><span class="o">.</span><span class="n">cacheKey</span> <span class="o">=</span> <span class="n">urlString</span><span class="p">;</span>
                        <span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">lotAnimationView</span> <span class="nv">setSceneModel</span><span class="p">:</span><span class="n">laScene</span><span class="p">];</span>
                        <span class="nf">resourceComplition</span><span class="p">(</span><span class="n">laScene</span><span class="o">.</span><span class="n">compBounds</span><span class="p">,</span> <span class="kt">YES</span><span class="p">);</span>
                    <span class="p">});</span>
                <span class="p">});</span>
            <span class="p">}</span>
            
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">default</span><span class="p">:</span>
            <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="n">startAnimating</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="k">self</span><span class="o">.</span><span class="n">animationType</span> <span class="o">==</span> <span class="kt">AnimationTypeSVGA</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">svgaPlayer</span> <span class="n">startAnimation</span><span class="p">];</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="k">self</span><span class="o">.</span><span class="n">animationType</span> <span class="o">==</span> <span class="kt">AnimationTypeLottie</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">__weak</span> <span class="nf">__typeof</span><span class="p">(</span><span class="o">&amp;*</span><span class="k">self</span><span class="p">)</span><span class="n">weakSelf</span> <span class="o">=</span> <span class="k">self</span><span class="p">;</span>
        
        <span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">lotAnimationView</span> <span class="nv">playWithCompletion</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="kt">BOOL</span> <span class="n">animationFinished</span><span class="p">)</span> <span class="p">{</span>
            
            <span class="n">__strong</span> <span class="nf">__typeof</span><span class="p">(</span><span class="k">self</span><span class="p">)</span><span class="n">strongSelf</span> <span class="o">=</span> <span class="n">weakSelf</span><span class="p">;</span>
            
            <span class="k">if</span> <span class="p">(</span><span class="n">animationFinished</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">strongSelf</span><span class="o">.</span><span class="n">delegate</span> <span class="o">&amp;&amp;</span> <span class="p">[</span><span class="n">strongSelf</span><span class="o">.</span><span class="n">delegate</span> <span class="nv">respondsToSelector</span><span class="p">:</span><span class="kd">@selector</span><span class="p">(</span><span class="nv">animationViewDidFinishedAnimation</span><span class="p">:)])</span>
                <span class="p">{</span>
                    <span class="p">[</span><span class="n">strongSelf</span><span class="o">.</span><span class="n">delegate</span> <span class="nv">animationViewDidFinishedAnimation</span><span class="p">:</span><span class="n">strongSelf</span><span class="p">];</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">strongSelf</span><span class="o">.</span><span class="n">delegate</span> <span class="o">&amp;&amp;</span> <span class="p">[</span><span class="n">strongSelf</span><span class="o">.</span><span class="n">delegate</span> <span class="nv">respondsToSelector</span><span class="p">:</span><span class="kd">@selector</span><span class="p">(</span><span class="nv">animationViewDidFailed</span><span class="p">:)])</span>
                <span class="p">{</span>
                    <span class="p">[</span><span class="n">strongSelf</span><span class="o">.</span><span class="n">delegate</span> <span class="nv">animationViewDidFailed</span><span class="p">:</span><span class="n">strongSelf</span><span class="p">];</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}];</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">startAnimatingWithCompletion</span><span class="p">:(</span><span class="kt">JFAnimationCompletionBlock</span><span class="p">)</span><span class="n">completion</span>
<span class="p">{</span>
    <span class="k">self</span><span class="o">.</span><span class="n">completionBlock</span> <span class="o">=</span> <span class="n">completion</span><span class="p">;</span>
    
    <span class="k">if</span> <span class="p">(</span><span class="k">self</span><span class="o">.</span><span class="n">animationType</span> <span class="o">==</span> <span class="kt">AnimationTypeSVGA</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">svgaPlayer</span> <span class="n">startAnimation</span><span class="p">];</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="k">self</span><span class="o">.</span><span class="n">animationType</span> <span class="o">==</span> <span class="kt">AnimationTypeLottie</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">lotAnimationView</span> <span class="nv">playWithCompletion</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="kt">BOOL</span> <span class="n">animationFinished</span><span class="p">)</span> <span class="p">{</span>
            
            <span class="k">self</span><span class="o">.</span><span class="nf">completionBlock</span><span class="p">(</span><span class="n">animationFinished</span><span class="p">);</span>
            
        <span class="p">}];</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="n">stopAnimating</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="k">self</span><span class="o">.</span><span class="n">animationType</span> <span class="o">==</span> <span class="kt">AnimationTypeSVGA</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">svgaPlayer</span> <span class="n">stopAnimation</span><span class="p">];</span>
        
        <span class="k">if</span> <span class="p">(</span><span class="k">self</span><span class="o">.</span><span class="n">delegate</span> <span class="o">&amp;&amp;</span> <span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">delegate</span> <span class="nv">respondsToSelector</span><span class="p">:</span><span class="kd">@selector</span><span class="p">(</span><span class="nv">animationViewDidFinishedAnimation</span><span class="p">:)])</span>
        <span class="p">{</span>
            <span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">delegate</span> <span class="nv">animationViewDidFinishedAnimation</span><span class="p">:</span><span class="k">self</span><span class="p">];</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="k">self</span><span class="o">.</span><span class="n">animationType</span> <span class="o">==</span> <span class="kt">AnimationTypeLottie</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">lotAnimationView</span> <span class="n">stop</span><span class="p">];</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">setImage</span><span class="p">:(</span><span class="kt">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="n">image</span> <span class="nv">forSVGAAnimationWithKey</span><span class="p">:(</span><span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">key</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="k">self</span><span class="o">.</span><span class="n">animationType</span> <span class="o">==</span> <span class="kt">AnimationTypeSVGA</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">svgaPlayer</span> <span class="nv">setImage</span><span class="p">:</span><span class="n">image</span> <span class="nv">forKey</span><span class="p">:</span><span class="n">key</span><span class="p">];</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">setAttributedText</span><span class="p">:(</span><span class="kt">NSAttributedString</span> <span class="o">*</span><span class="p">)</span><span class="n">attributedText</span> <span class="nv">forSVGAAnimationWithKey</span><span class="p">:(</span><span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">key</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="k">self</span><span class="o">.</span><span class="n">animationType</span> <span class="o">==</span> <span class="kt">AnimationTypeSVGA</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">svgaPlayer</span> <span class="nv">setAttributedText</span><span class="p">:</span><span class="n">attributedText</span> <span class="nv">forKey</span><span class="p">:</span><span class="n">key</span><span class="p">];</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">setDrawingBlock</span><span class="p">:(</span><span class="kt">SVGAPlayerDynamicDrawingBlock</span><span class="p">)</span><span class="n">drawingBlock</span> <span class="nv">forSVGAAnimationWithKey</span><span class="p">:(</span><span class="kt">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">key</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="k">self</span><span class="o">.</span><span class="n">animationType</span> <span class="o">==</span> <span class="kt">AnimationTypeSVGA</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">svgaPlayer</span> <span class="nv">setDrawingBlock</span><span class="p">:</span><span class="n">drawingBlock</span> <span class="nv">forKey</span><span class="p">:</span><span class="n">key</span><span class="p">];</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="cp">#pragma mark - --- SVGAPlayer Delegate ---</span>

<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">svgaPlayerDidFinishedAnimation</span><span class="p">:(</span><span class="kt">SVGAPlayer</span> <span class="o">*</span><span class="p">)</span><span class="n">player</span>
<span class="p">{</span>
    <span class="p">[</span><span class="n">player</span> <span class="n">clear</span><span class="p">];</span>

    <span class="k">if</span> <span class="p">(</span><span class="k">self</span><span class="o">.</span><span class="n">delegate</span> <span class="o">&amp;&amp;</span> <span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">delegate</span> <span class="nv">respondsToSelector</span><span class="p">:</span><span class="kd">@selector</span><span class="p">(</span><span class="nv">animationViewDidFinishedAnimation</span><span class="p">:)])</span>
    <span class="p">{</span>
        <span class="p">[</span><span class="k">self</span><span class="o">.</span><span class="n">delegate</span> <span class="nv">animationViewDidFinishedAnimation</span><span class="p">:</span><span class="k">self</span><span class="p">];</span>
    <span class="p">}</span>
    
    <span class="k">if</span> <span class="p">(</span><span class="k">self</span><span class="o">.</span><span class="n">completionBlock</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">self</span><span class="o">.</span><span class="nf">completionBlock</span><span class="p">(</span><span class="kt">YES</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="cp">#pragma mark - --- Setter &amp; Getter ---</span>

<span class="o">-</span> <span class="p">(</span><span class="kt">SVGAPlayer</span> <span class="o">*</span><span class="p">)</span><span class="n">svgaPlayer</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">_svgaPlayer</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">_svgaPlayer</span> <span class="o">=</span> <span class="p">[[</span><span class="kt">SVGAPlayer</span> <span class="n">alloc</span><span class="p">]</span> <span class="nv">initWithFrame</span><span class="p">:</span><span class="k">self</span><span class="o">.</span><span class="n">bounds</span><span class="p">];</span>
        <span class="n">_svgaPlayer</span><span class="o">.</span><span class="n">contentMode</span> <span class="o">=</span> <span class="k">self</span><span class="o">.</span><span class="n">contentMode</span><span class="p">;</span>
        <span class="n">_svgaPlayer</span><span class="o">.</span><span class="n">loops</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="n">_svgaPlayer</span><span class="o">.</span><span class="n">clearsAfterStop</span> <span class="o">=</span> <span class="kt">YES</span><span class="p">;</span>
        <span class="n">_svgaPlayer</span><span class="o">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="k">self</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">_svgaPlayer</span><span class="p">;</span>
<span class="p">}</span>

<span class="o">-</span> <span class="p">(</span><span class="kt">SVGAParser</span> <span class="o">*</span><span class="p">)</span><span class="n">svgaParser</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">_svgaParser</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">_svgaParser</span> <span class="o">=</span> <span class="p">[[</span><span class="kt">SVGAParser</span> <span class="n">alloc</span><span class="p">]</span> <span class="kd">init</span><span class="p">];</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">_svgaParser</span><span class="p">;</span>
<span class="p">}</span>

<span class="o">-</span> <span class="p">(</span><span class="kt">LOTAnimationView</span> <span class="o">*</span><span class="p">)</span><span class="n">lotAnimationView</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">_lotAnimationView</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">_lotAnimationView</span> <span class="o">=</span> <span class="p">[[</span><span class="kt">LOTAnimationView</span> <span class="n">alloc</span><span class="p">]</span> <span class="nv">initWithFrame</span><span class="p">:</span><span class="k">self</span><span class="o">.</span><span class="n">bounds</span><span class="p">];</span>
        <span class="n">_lotAnimationView</span><span class="o">.</span><span class="n">contentMode</span> <span class="o">=</span> <span class="k">self</span><span class="o">.</span><span class="n">contentMode</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">_lotAnimationView</span><span class="p">;</span>
<span class="p">}</span>

<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">setLoopAnimation</span><span class="p">:(</span><span class="kt">BOOL</span><span class="p">)</span><span class="n">loopAnimation</span>
<span class="p">{</span>
    <span class="n">_loopAnimation</span> <span class="o">=</span> <span class="n">loopAnimation</span><span class="p">;</span>
    
    <span class="k">if</span> <span class="p">(</span><span class="k">self</span><span class="o">.</span><span class="n">animationType</span> <span class="o">==</span> <span class="kt">AnimationTypeSVGA</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">self</span><span class="o">.</span><span class="n">svgaPlayer</span><span class="o">.</span><span class="n">loops</span> <span class="o">=</span> <span class="n">loopAnimation</span> <span class="p">?</span> <span class="mi">0</span> <span class="p">:</span> <span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="k">self</span><span class="o">.</span><span class="n">animationType</span> <span class="o">==</span> <span class="kt">AnimationTypeLottie</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">self</span><span class="o">.</span><span class="n">lotAnimationView</span><span class="o">.</span><span class="n">loopAnimation</span> <span class="o">=</span> <span class="n">loopAnimation</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">setContentMode</span><span class="p">:(</span><span class="kt">UIViewContentMode</span><span class="p">)</span><span class="n">contentMode</span>
<span class="p">{</span>
    <span class="p">[</span><span class="k">super</span> <span class="nv">setContentMode</span><span class="p">:</span><span class="n">contentMode</span><span class="p">];</span>
    
    <span class="n">_lotAnimationView</span><span class="o">.</span><span class="n">contentMode</span> <span class="o">=</span> <span class="n">contentMode</span><span class="p">;</span>
    <span class="n">_svgaPlayer</span><span class="o">.</span><span class="n">contentMode</span> <span class="o">=</span> <span class="n">contentMode</span><span class="p">;</span>
<span class="p">}</span>

<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">setAnimationType</span><span class="p">:(</span><span class="kt">JFAnimationType</span><span class="p">)</span><span class="n">animationType</span>
<span class="p">{</span>
    <span class="n">_animationType</span> <span class="o">=</span> <span class="n">animationType</span><span class="p">;</span>
    
    <span class="k">if</span> <span class="p">(</span><span class="n">animationType</span> <span class="o">==</span> <span class="kt">AnimationTypeLottie</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">_hasLottieLoad</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="p">[</span><span class="k">self</span> <span class="nv">addSubview</span><span class="p">:</span><span class="k">self</span><span class="o">.</span><span class="n">lotAnimationView</span><span class="p">];</span>
            <span class="n">_hasLottieLoad</span> <span class="o">=</span> <span class="kt">YES</span><span class="p">;</span>
        <span class="p">}</span>
        
        <span class="n">_lotAnimationView</span><span class="o">.</span><span class="n">hidden</span> <span class="o">=</span> <span class="kt">NO</span><span class="p">;</span>
        <span class="n">_svgaPlayer</span><span class="o">.</span><span class="n">hidden</span> <span class="o">=</span> <span class="kt">YES</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">animationType</span> <span class="o">==</span> <span class="kt">AnimationTypeSVGA</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">_hasSVGALoad</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="p">[</span><span class="k">self</span> <span class="nv">addSubview</span><span class="p">:</span><span class="k">self</span><span class="o">.</span><span class="n">svgaPlayer</span><span class="p">];</span>
            <span class="n">_hasSVGALoad</span> <span class="o">=</span> <span class="kt">YES</span><span class="p">;</span>
        <span class="p">}</span>
        
        <span class="n">_lotAnimationView</span><span class="o">.</span><span class="n">hidden</span> <span class="o">=</span> <span class="kt">YES</span><span class="p">;</span>
        <span class="n">_svgaPlayer</span><span class="o">.</span><span class="n">hidden</span> <span class="o">=</span> <span class="kt">NO</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="o">-</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span><span class="nv">setFrame</span><span class="p">:(</span><span class="kt">CGRect</span><span class="p">)</span><span class="n">frame</span>
<span class="p">{</span>
    <span class="p">[</span><span class="k">super</span> <span class="nv">setFrame</span><span class="p">:</span><span class="n">frame</span><span class="p">];</span>
    
    <span class="n">_lotAnimationView</span><span class="o">.</span><span class="n">frame</span> <span class="o">=</span> <span class="kt">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">frame</span><span class="o">.</span><span class="n">size</span><span class="o">.</span><span class="n">width</span><span class="p">,</span> <span class="n">frame</span><span class="o">.</span><span class="n">size</span><span class="o">.</span><span class="n">height</span><span class="p">);</span>
    <span class="n">_svgaPlayer</span><span class="o">.</span><span class="n">frame</span> <span class="o">=</span> <span class="kt">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">frame</span><span class="o">.</span><span class="n">size</span><span class="o">.</span><span class="n">width</span><span class="p">,</span> <span class="n">frame</span><span class="o">.</span><span class="n">size</span><span class="o">.</span><span class="n">height</span><span class="p">);</span>
<span class="p">}</span>

<span class="kd">@end</span>


</code></pre></div></div>

<h2 id="结语">结语</h2>

<p>大概简单的介绍了当前比较好用的两个动画加载库，希望大家对大家着手开发有所帮助，如果有问题也可以在评论区留言会这联系我的邮箱，收到后会及时回复。喜欢的老铁收藏下，双击666。好了，我们本期博客到此结束，我们下次再见。</p>

<p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1541506562699&amp;di=92c038149b2185df3db6216ac3f69259&amp;imgtype=0&amp;src=http%3A%2F%2Fc.hiphotos.baidu.com%2Fimage%2Fpic%2Fitem%2F8b13632762d0f703fb8b190102fa513d2697c536.jpg" alt="" /></p>
:ET